@model IEnumerable<OptionsHelperApp.Models.OptionContract>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ContractInfo)
            </th>
            <th>
                STATUS
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateOpened)
            </th>
            <th>
                DTE
            </th>
            <th>
                Buyback
            </th>
            <th>
                Days Held
            </th>
            <th>
                P/L
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Symbol)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AccountOwner)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OptionType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OpenAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClosedAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExpirationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClosingDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProfitLoss)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProfitPercentage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DaysToClose)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Assigned)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StrikePrice)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
            <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ContractInfo)
            </td>
            <td>
                @if (item.ExpirationDate.Date > DateTime.Now.Date)
                {
                    // not expired yet
                    @if (item.ClosingDate != null)
                    {
                        // but closed, since there's a closing date
                        <span> CLOSED </span>
                    } else{
                        // unpired, but still open, no closing date
                        <span style="color:red"> OPEN </span>
                    }
                }
                else
                {
                    // expired
                    <span> EXPIRED </span>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOpened)
            </td>
            <td>
                @Convert.ToInt32((item.ExpirationDate.Date - DateTime.Now.Date).Days)
            </td>
            <td>
                60% @(item.OpenAmount * 0.4)
                <br />
                80% @(item.OpenAmount * 0.2)
                <br />
            </td>
            <td>
                @if (item.ClosingDate != null)
                {
                    // closed early
                    <span>@Convert.ToInt32(((DateTime)item.ClosingDate - item.DateOpened).Days)</span>
                } else 
                {
                    // go until exp date
                    <span>@Convert.ToInt32(((DateTime)item.ExpirationDate - item.DateOpened).Days)</span>
                }
            </td>
            <td>
                @if (item.ClosedAmount != null)
                {
                    // closed early
                    <span>
                        @(item.OpenAmount - item.ClosedAmount),
                        @((item.OpenAmount - item.ClosedAmount) / (item.OpenAmount))%
                    </span>
                } else
                {
                    // did not buy to close
                    @if (item.ExpirationDate.Date < DateTime.Now.Date)
                    {
                        // expired with 100% again
                        <span>@(item.OpenAmount), 100%</span>
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Symbol)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AccountOwner)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OptionType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OpenAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClosedAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpirationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClosingDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProfitLoss)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProfitPercentage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DaysToClose)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Assigned)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StrikePrice)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
